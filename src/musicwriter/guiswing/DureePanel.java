/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DureePanel.java
 *
 * Created on 17 févr. 2010, 15:37:51
 */

package musicwriter.guiswing;

import java.awt.event.ActionListener;
import javax.swing.JPanel;
import javax.swing.JToggleButton;
import javax.swing.TransferHandler;
import musicwriter.donnees.*;
import musicwriter.guiswing.palette.SelectionTransfertHandler;
import org.jdesktop.application.Action;

/**
 * Panel où on peut donner une durée standard
 * @author Ancmin
 */
public class DureePanel extends JPanel {

    private Rational dureeRational = new Rational(1, 1);
    private ActionListener actionListener = null;


    

    /** Creates new form DureePanel */
    public DureePanel() {
        super();
        initComponents();
        dureeRational = new Rational(1, 1);
        afficherRational();
        addDragAndDropTransferHandler(cmdNoire, Duree.getDureeNoire());
        addDragAndDropTransferHandler(cmdBlanche, Duree.getDureeBlanche());
        addDragAndDropTransferHandler(cmdRonde, Duree.getDureeRonde());
        addDragAndDropTransferHandler(cmdCroche, Duree.getDureeCroche());
        addDragAndDropTransferHandler(cmdDoubleCroche, Duree.getDureeDoubleCroche());
        addDragAndDropTransferHandler(cmdTripleCroche, Duree.getDureeTripleCroche());
        addDragAndDropTransferHandler(cmdQuadrupleCroche, Duree.getDureeQuadrupleCroche());
    }

    
    /**
     * attach drag drop on the button b
     * @param b
     * @param d 
     */
    private void addDragAndDropTransferHandler(final JToggleButton b, Duree d)
    {
        b.setTransferHandler(new SelectionTransfertHandler(getSelectionNote(d)));
        b.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                b.getTransferHandler().exportAsDrag(b, evt,
                    TransferHandler.COPY);
                evt.consume();
            }
        });


    }


    public Duree getDuree()
    {
        return new Duree(dureeRational);
    }


    public void setDuree(Duree duree)
    {
        dureeRational = duree.getRational();
        afficherRationalSansActionListener();

        
    }
    

    public void addListener(ActionListener a)
    {
        this.actionListener = a;
    }


    


    private void afficherRationalSansActionListener()
    {
        if(dureeRational.isSuperieur(new Rational(4, 1)))
            cmdRonde.setSelected(true);
        else if(dureeRational.isSuperieur(new Rational(2, 1)))
            cmdBlanche.setSelected(true);
        else if(dureeRational.isSuperieur(new Rational(1, 1)))
            cmdNoire.setSelected(true);
        else if(dureeRational.isSuperieur(new Rational(1, 2)))
            cmdCroche.setSelected(true);
        else if(dureeRational.isSuperieur(new Rational(1, 4)))
            cmdDoubleCroche.setSelected(true);
        else if(dureeRational.isSuperieur(new Rational(1, 8)))
            cmdTripleCroche.setSelected(true);
        else
            cmdQuadrupleCroche.setSelected(true);

        cmdPointe.setSelected(isPoint1());
        cmdDoublePointe.setSelected(isPoint2());

        repaint();
    }

    private void afficherRational()
    {
        afficherRationalSansActionListener();

        
            
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jToolBar2 = new javax.swing.JToolBar();
        cmdPointe = new javax.swing.JToggleButton();
        cmdDoublePointe = new javax.swing.JToggleButton();
        jToolBar1 = new javax.swing.JToolBar();
        cmdQuadrupleCroche = new javax.swing.JToggleButton();
        cmdTripleCroche = new javax.swing.JToggleButton();
        cmdDoubleCroche = new javax.swing.JToggleButton();
        cmdCroche = new javax.swing.JToggleButton();
        cmdNoire = new javax.swing.JToggleButton();
        cmdBlanche = new javax.swing.JToggleButton();
        cmdRonde = new javax.swing.JToggleButton();

        setMaximumSize(new java.awt.Dimension(2147483647, 42));
        setPreferredSize(new java.awt.Dimension(0, 42));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);
        jToolBar2.setName("jToolBar2"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(DureePanel.class, this);
        cmdPointe.setAction(actionMap.get("actionMettreAJourRational")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(DureePanel.class);
        cmdPointe.setIcon(resourceMap.getIcon("cmdPointe.icon")); // NOI18N
        cmdPointe.setToolTipText(resourceMap.getString("cmdPointe.toolTipText")); // NOI18N
        cmdPointe.setFocusable(false);
        cmdPointe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdPointe.setName("cmdPointe"); // NOI18N
        cmdPointe.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdPointe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPointeActionPerformed(evt);
            }
        });
        jToolBar2.add(cmdPointe);

        cmdDoublePointe.setAction(actionMap.get("actionMettreAJourRational")); // NOI18N
        cmdDoublePointe.setIcon(resourceMap.getIcon("cmdDoublePointe.icon")); // NOI18N
        cmdDoublePointe.setToolTipText(resourceMap.getString("cmdDoublePointe.toolTipText")); // NOI18N
        cmdDoublePointe.setFocusable(false);
        cmdDoublePointe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdDoublePointe.setName("cmdDoublePointe"); // NOI18N
        cmdDoublePointe.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdDoublePointe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDoublePointeActionPerformed(evt);
            }
        });
        jToolBar2.add(cmdDoublePointe);

        add(jToolBar2);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        cmdQuadrupleCroche.setAction(actionMap.get("actionMettreAJourRational")); // NOI18N
        buttonGroup1.add(cmdQuadrupleCroche);
        cmdQuadrupleCroche.setIcon(resourceMap.getIcon("cmdQuadrupleCroche.icon")); // NOI18N
        cmdQuadrupleCroche.setText(resourceMap.getString("cmdQuadrupleCroche.text")); // NOI18N
        cmdQuadrupleCroche.setToolTipText(resourceMap.getString("cmdQuadrupleCroche.toolTipText")); // NOI18N
        cmdQuadrupleCroche.setFocusable(false);
        cmdQuadrupleCroche.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdQuadrupleCroche.setName("cmdQuadrupleCroche"); // NOI18N
        cmdQuadrupleCroche.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(cmdQuadrupleCroche);

        cmdTripleCroche.setAction(actionMap.get("actionMettreAJourRational")); // NOI18N
        buttonGroup1.add(cmdTripleCroche);
        cmdTripleCroche.setIcon(resourceMap.getIcon("cmdTripleCroche.icon")); // NOI18N
        cmdTripleCroche.setText(resourceMap.getString("cmdTripleCroche.text")); // NOI18N
        cmdTripleCroche.setToolTipText(resourceMap.getString("cmdTripleCroche.toolTipText")); // NOI18N
        cmdTripleCroche.setFocusable(false);
        cmdTripleCroche.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdTripleCroche.setName("cmdTripleCroche"); // NOI18N
        cmdTripleCroche.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(cmdTripleCroche);

        cmdDoubleCroche.setAction(actionMap.get("actionMettreAJourRational")); // NOI18N
        buttonGroup1.add(cmdDoubleCroche);
        cmdDoubleCroche.setIcon(resourceMap.getIcon("cmdDoubleCroche.icon")); // NOI18N
        cmdDoubleCroche.setText(resourceMap.getString("cmdDoubleCroche.text")); // NOI18N
        cmdDoubleCroche.setToolTipText(resourceMap.getString("cmdDoubleCroche.toolTipText")); // NOI18N
        cmdDoubleCroche.setFocusable(false);
        cmdDoubleCroche.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdDoubleCroche.setName("cmdDoubleCroche"); // NOI18N
        cmdDoubleCroche.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(cmdDoubleCroche);

        cmdCroche.setAction(actionMap.get("actionMettreAJourRational")); // NOI18N
        buttonGroup1.add(cmdCroche);
        cmdCroche.setIcon(resourceMap.getIcon("cmdCroche.icon")); // NOI18N
        cmdCroche.setText(resourceMap.getString("cmdCroche.text")); // NOI18N
        cmdCroche.setToolTipText(resourceMap.getString("cmdCroche.toolTipText")); // NOI18N
        cmdCroche.setFocusable(false);
        cmdCroche.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdCroche.setName("cmdCroche"); // NOI18N
        cmdCroche.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(cmdCroche);

        cmdNoire.setAction(actionMap.get("actionMettreAJourRational")); // NOI18N
        buttonGroup1.add(cmdNoire);
        cmdNoire.setIcon(resourceMap.getIcon("cmdNoire.icon")); // NOI18N
        cmdNoire.setText(resourceMap.getString("cmdNoire.text")); // NOI18N
        cmdNoire.setToolTipText(resourceMap.getString("cmdNoire.toolTipText")); // NOI18N
        cmdNoire.setFocusable(false);
        cmdNoire.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdNoire.setName("cmdNoire"); // NOI18N
        cmdNoire.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdNoire.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                cmdNoireMouseDragged(evt);
            }
        });
        jToolBar1.add(cmdNoire);

        cmdBlanche.setAction(actionMap.get("actionMettreAJourRational")); // NOI18N
        buttonGroup1.add(cmdBlanche);
        cmdBlanche.setIcon(resourceMap.getIcon("cmdBlanche.icon")); // NOI18N
        cmdBlanche.setText(resourceMap.getString("cmdBlanche.text")); // NOI18N
        cmdBlanche.setToolTipText(resourceMap.getString("cmdBlanche.toolTipText")); // NOI18N
        cmdBlanche.setFocusable(false);
        cmdBlanche.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdBlanche.setName("cmdBlanche"); // NOI18N
        cmdBlanche.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(cmdBlanche);

        cmdRonde.setAction(actionMap.get("actionMettreAJourRational")); // NOI18N
        buttonGroup1.add(cmdRonde);
        cmdRonde.setIcon(resourceMap.getIcon("cmdRonde.icon")); // NOI18N
        cmdRonde.setToolTipText(resourceMap.getString("cmdRonde.toolTipText")); // NOI18N
        cmdRonde.setFocusable(false);
        cmdRonde.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdRonde.setName("cmdRonde"); // NOI18N
        cmdRonde.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(cmdRonde);

        add(jToolBar1);
    }// </editor-fold>//GEN-END:initComponents



    



    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered

    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
 
    }//GEN-LAST:event_formMouseExited

    private void cmdDoublePointeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDoublePointeActionPerformed
        cmdPointe.setSelected(false);
    }//GEN-LAST:event_cmdDoublePointeActionPerformed

    private void cmdPointeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPointeActionPerformed
        cmdDoublePointe.setSelected(false);
    }//GEN-LAST:event_cmdPointeActionPerformed

    private void cmdNoireMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdNoireMouseDragged
        
    }//GEN-LAST:event_cmdNoireMouseDragged







    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JToggleButton cmdBlanche;
    private javax.swing.JToggleButton cmdCroche;
    private javax.swing.JToggleButton cmdDoubleCroche;
    private javax.swing.JToggleButton cmdDoublePointe;
    private javax.swing.JToggleButton cmdNoire;
    private javax.swing.JToggleButton cmdPointe;
    private javax.swing.JToggleButton cmdQuadrupleCroche;
    private javax.swing.JToggleButton cmdRonde;
    private javax.swing.JToggleButton cmdTripleCroche;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    // End of variables declaration//GEN-END:variables

    

    private boolean isPoint1() {
        return (dureeRational.getNumerateur() == 3) | (dureeRational.getNumerateur() == 6);
    }

    private boolean isPoint2() {
        return (dureeRational.getNumerateur() == 7);
    }

    private Rational dureeSansPoints() {

        if(cmdRonde.isSelected())
            return new Rational(4, 1);
        else if(cmdBlanche.isSelected())
            return new Rational(2, 1);
        else if(cmdNoire.isSelected())
            return new Rational(1, 1);
        else if(cmdCroche.isSelected())
            return new Rational(1, 2);
        else if(cmdDoubleCroche.isSelected())
            return new Rational(1, 4);
        else if(cmdTripleCroche.isSelected())
            return new Rational(1, 8);
        else if(cmdQuadrupleCroche.isSelected())
            return new Rational(1, 16);
        else
            return null;
    }



    
/**
     * fait que les boutons soient des notes
     */
    public void afficherNotes()
    {
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(musicwriter.MusicwriterApp.class).getContext().getResourceMap(DureePanel.class);
        
        cmdPointe.setIcon(resourceMap.getIcon("cmdPointe.icon")); // NOI18N
        cmdDoublePointe.setIcon(resourceMap.getIcon("cmdDoublePointe.icon")); // NOI18N

        cmdQuadrupleCroche.setIcon(resourceMap.getIcon("cmdQuadrupleCroche.icon")); // NOI18N
        cmdTripleCroche.setIcon(resourceMap.getIcon("cmdTripleCroche.icon")); // NOI18N
        cmdDoubleCroche.setIcon(resourceMap.getIcon("cmdDoubleCroche.icon")); // NOI18N
        cmdCroche.setIcon(resourceMap.getIcon("cmdCroche.icon")); // NOI18N
        cmdNoire.setIcon(resourceMap.getIcon("cmdNoire.icon")); // NOI18N
        cmdBlanche.setIcon(resourceMap.getIcon("cmdBlanche.icon")); // NOI18N
        cmdRonde.setIcon(resourceMap.getIcon("cmdRonde.icon")); // NOI18N
    }



    
/**
     * fait que les boutons soient des notes
     */
    public void afficherSilence()
    {
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(musicwriter.MusicwriterApp.class).getContext().getResourceMap(DureePanel.class);
        
        cmdPointe.setIcon(resourceMap.getIcon("silencepointe.icon")); // NOI18N
        cmdDoublePointe.setIcon(resourceMap.getIcon("silencedoublepointe.icon")); // NOI18N

        
        cmdQuadrupleCroche.setIcon(resourceMap.getIcon("seiziemedesoupir.icon")); // NOI18N
        cmdTripleCroche.setIcon(resourceMap.getIcon("huitiemedesoupir.icon")); // NOI18N
        cmdDoubleCroche.setIcon(resourceMap.getIcon("quartdesoupir.icon")); // NOI18N
        cmdCroche.setIcon(resourceMap.getIcon("demisoupir.icon")); // NOI18N
        cmdNoire.setIcon(resourceMap.getIcon("soupir.icon")); // NOI18N
        
        
        cmdBlanche.setIcon(resourceMap.getIcon("demipause.icon")); // NOI18N
        cmdRonde.setIcon(resourceMap.getIcon("pause.icon")); // NOI18N
    }
        
    
    
    Selection getSelectionNote(Duree d)
    {
        return new Selection(new Note(new Moment(new Rational(0, 1)), d, Hauteur.getDo0(), new Portee(new Partie(new Instrument(0)))));
    }


    @Action
    public void actionMettreAJourRational() {
        dureeRational = dureeSansPoints();

        if(cmdPointe.isSelected())
            dureeRational = dureeRational.multiplier(new Rational(3, 2));
        else if(cmdDoublePointe.isSelected())
            dureeRational = dureeRational.multiplier(new Rational(7, 4));

        if(actionListener != null)
        {
            actionListener.actionPerformed(null);
        }
    }






    

}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PartitionPartiesDialog.java
 *
 * Created on 18 janv. 2010, 21:07:00
 */

package musicwriter.guiswing.dialogs;

import java.awt.dnd.DropTarget;
import javax.swing.DropMode;
import javax.swing.JOptionPane;
import musicwriter.donnees.Histoire;
import musicwriter.donnees.Partie;
import musicwriter.donnees.PartitionDonnees;
import musicwriter.donnees.actions.PartitionActionPartieAjouter;
import musicwriter.donnees.actions.PartitionActionPartieDeplacer;
import musicwriter.donnees.actions.PartitionActionPartieSupprimer;

/**
 *
 * @author Ancmin
 */
public class PartitionPartiesDialog extends javax.swing.JDialog {
    private final PartitionDonnees partitionDonnees;
    private boolean annule = true;
    private final Histoire histoire;

    private PartitionPartiesEditorList getPartitionPartiesList()
    {
        return (PartitionPartiesEditorList) jListPartitionParties;
        
    }



    /** Creates new form PartitionPartiesDialog */
    public PartitionPartiesDialog(java.awt.Frame parent, boolean modal, PartitionDonnees partitionDonnees) {  
        this(parent, modal,  new Histoire(partitionDonnees, null), partitionDonnees);

       
    }


    /** Creates new form PartitionPartiesDialog */
    public PartitionPartiesDialog(java.awt.Frame parent, boolean modal, Histoire histoire, PartitionDonnees partitionDonnees) {
        super(parent, modal);
        this.histoire = histoire;
        this.partitionDonnees = partitionDonnees;
        initComponents();
        getPartitionPartiesList().mettreAJour();
        getPartitionPartiesList().setDropMode(DropMode.ON);
        getPartitionPartiesList().setDropTarget(new PartitionPartiesDropTargetListener());
        setGlassPane(new GhostGlassPane());
        
        instrumentsPanel1.fillInstruments((GhostGlassPane) getGlassPane());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        cmdSupprimer = new javax.swing.JButton();
        cmdVersLeHaut = new javax.swing.JButton();
        cmdVersLeBas = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        instrumentsPanel1 = new musicwriter.guiswing.dialogs.InstrumentsPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListPartitionParties = new musicwriter.guiswing.dialogs.PartitionPartiesEditorList(partitionDonnees, histoire);
        jPanel1 = new javax.swing.JPanel();
        cmdOK = new javax.swing.JButton();
        cmdAnnuler = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(PartitionPartiesDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(400, 600));
        setName("Form"); // NOI18N
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setName("jButton1"); // NOI18N
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        cmdSupprimer.setIcon(resourceMap.getIcon("cmdSupprimer.icon")); // NOI18N
        cmdSupprimer.setText(resourceMap.getString("cmdSupprimer.text")); // NOI18N
        cmdSupprimer.setFocusable(false);
        cmdSupprimer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdSupprimer.setName("cmdSupprimer"); // NOI18N
        cmdSupprimer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSupprimerActionPerformed(evt);
            }
        });
        jToolBar1.add(cmdSupprimer);

        cmdVersLeHaut.setIcon(resourceMap.getIcon("cmdVersLeHaut.icon")); // NOI18N
        cmdVersLeHaut.setText(resourceMap.getString("cmdVersLeHaut.text")); // NOI18N
        cmdVersLeHaut.setFocusable(false);
        cmdVersLeHaut.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdVersLeHaut.setName("cmdVersLeHaut"); // NOI18N
        cmdVersLeHaut.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdVersLeHaut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdVersLeHautActionPerformed(evt);
            }
        });
        jToolBar1.add(cmdVersLeHaut);

        cmdVersLeBas.setIcon(resourceMap.getIcon("cmdVersLeBas.icon")); // NOI18N
        cmdVersLeBas.setText(resourceMap.getString("cmdVersLeBas.text")); // NOI18N
        cmdVersLeBas.setFocusable(false);
        cmdVersLeBas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdVersLeBas.setName("cmdVersLeBas"); // NOI18N
        cmdVersLeBas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdVersLeBas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdVersLeBasActionPerformed(evt);
            }
        });
        jToolBar1.add(cmdVersLeBas);

        jButton3.setIcon(resourceMap.getIcon("jButton3.icon")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setName("jButton3"); // NOI18N
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        getContentPane().add(jToolBar1);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        instrumentsPanel1.setMaximumSize(null);
        instrumentsPanel1.setName("instrumentsPanel1"); // NOI18N
        instrumentsPanel1.setPreferredSize(new java.awt.Dimension(400, 150));
        jPanel2.add(instrumentsPanel1);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jListPartitionParties.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListPartitionParties.setMaximumSize(null);
        jListPartitionParties.setName("jListPartitionParties"); // NOI18N
        jListPartitionParties.setPreferredSize(new java.awt.Dimension(200, 80));
        jListPartitionParties.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListPartitionPartiesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListPartitionParties);

        jPanel2.add(jScrollPane1);

        getContentPane().add(jPanel2);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        cmdOK.setIcon(resourceMap.getIcon("cmdOK.icon")); // NOI18N
        cmdOK.setText(resourceMap.getString("cmdOK.text")); // NOI18N
        cmdOK.setName("cmdOK"); // NOI18N
        cmdOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOKActionPerformed(evt);
            }
        });
        jPanel1.add(cmdOK);

        cmdAnnuler.setIcon(resourceMap.getIcon("cmdAnnuler.icon")); // NOI18N
        cmdAnnuler.setText(resourceMap.getString("cmdAnnuler.text")); // NOI18N
        cmdAnnuler.setName("cmdAnnuler"); // NOI18N
        cmdAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAnnulerActionPerformed(evt);
            }
        });
        jPanel1.add(cmdAnnuler);

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        InstrumentsDialog d = new InstrumentsDialog(null, true);
        d.setVisible(true);
        if(d.getInstrument() != null)
        {
            Partie partie = new Partie(d.getInstrument());
            getHistoire().executer(new PartitionActionPartieAjouter(partitionDonnees.getPartieNombre(), partie));
            getPartitionPartiesList().mettreAJour();
        }

    }//GEN-LAST:event_jButton1ActionPerformed



    private Histoire getHistoire()
    {
        return histoire;
    }

    private void cmdSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSupprimerActionPerformed
        // TODO add your handling code here:
        if(jListPartitionParties.getSelectedIndex() >= 0)
        {
            if(!partitionDonnees.isPartieVide(getPartitionPartiesList().getSelectedPartie()))
            {
                String[] choix = {"On supprime cette partie", "On ne touche à rien"};
                int reponse = JOptionPane.showOptionDialog(null,
			       "La partie que vous voulez supprimer n'est pas vide ! Voulez-vous quand-même la supprimer ?",
			       "Schwarz Musicwriter",
			       JOptionPane.YES_NO_OPTION,
			       JOptionPane.QUESTION_MESSAGE,
			       null,
			       choix,
                               choix[1]);
                switch(reponse)
                {
                    case JOptionPane.NO_OPTION:
                        return;
                }
            }
            getHistoire().executer(new PartitionActionPartieSupprimer(partitionDonnees, jListPartitionParties.getSelectedIndex()));
            jListPartitionParties.repaint();
        }
        


    }//GEN-LAST:event_cmdSupprimerActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        InstrumentTranspositionDialog d = new InstrumentTranspositionDialog(null, true);
        d.setVisible(true);
        if(d.getIntervalleTransposition() != null)
        {
            getPartitionPartiesList().getSelectedPartie()
                      .setTransposition(d.getIntervalleTransposition());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOKActionPerformed
        setVisible(false);
        annule = false;
}//GEN-LAST:event_cmdOKActionPerformed

    private void cmdAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAnnulerActionPerformed
        setVisible(false);
}//GEN-LAST:event_cmdAnnulerActionPerformed

    private void jListPartitionPartiesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListPartitionPartiesMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() > 1)
        {
            if(jListPartitionParties.getSelectedIndex() >= 0)
            {
                    InstrumentsDialog d = new InstrumentsDialog(null, true);
                    d.setVisible(true);
                    if(d.getInstrument() != null)
                    {
                        getPartitionPartiesList().getSelectedPartie()
                                .setInstrument(d.getInstrument());
                        getPartitionPartiesList().mettreAJour();
                    }

            }
        }
    }//GEN-LAST:event_jListPartitionPartiesMouseClicked

    private void cmdVersLeHautActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdVersLeHautActionPerformed
        if(jListPartitionParties.getSelectedIndex() > 0)
        {
            int partieIndex = jListPartitionParties.getSelectedIndex();
            Partie partieADeplacer = partitionDonnees.getPartie(partieIndex);
            getHistoire().executer(new PartitionActionPartieDeplacer(partieADeplacer, partieIndex - 1));

            jListPartitionParties.repaint();
            jListPartitionParties.setSelectedIndex(partieIndex - 1);
        }
    }//GEN-LAST:event_cmdVersLeHautActionPerformed

    private void cmdVersLeBasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdVersLeBasActionPerformed
        if(jListPartitionParties.getSelectedIndex() >= 0 &&
                jListPartitionParties.getSelectedIndex() < partitionDonnees.getPartieNombre()-1)
        {
            int partieIndex = jListPartitionParties.getSelectedIndex();
            Partie partieADeplacer = partitionDonnees.getPartie(partieIndex);
            getHistoire().executer(new PartitionActionPartieDeplacer(partieADeplacer, partieIndex + 1));
            jListPartitionParties.repaint();
            jListPartitionParties.setSelectedIndex(partieIndex + 1);
        }
    }//GEN-LAST:event_cmdVersLeBasActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PartitionDonnees partitionDonnees = new PartitionDonnees();
                PartitionPartiesDialog dialog = new PartitionPartiesDialog(new javax.swing.JFrame(), true, new Histoire(partitionDonnees, null), partitionDonnees);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdAnnuler;
    private javax.swing.JButton cmdOK;
    private javax.swing.JButton cmdSupprimer;
    private javax.swing.JButton cmdVersLeBas;
    private javax.swing.JButton cmdVersLeHaut;
    private musicwriter.guiswing.dialogs.InstrumentsPanel instrumentsPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JList jListPartitionParties;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    public boolean isAnnule() {
        return annule;
    }

}
